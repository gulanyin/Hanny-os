# 1 "user/stdio_c.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "user/stdio_c.c"
# 1 "include/user/stdio_h.h" 1



# 1 "include/sys/std_int_h.h" 1


    typedef signed char int8_t;
    typedef signed short int int16_t;
    typedef signed int int32_t;
    typedef signed long long int int64_t;
    typedef unsigned char uint8_t;
    typedef unsigned short int uint16_t;
    typedef unsigned int uint32_t;
    typedef unsigned long long int uint64_t;


    typedef unsigned char BYTE;
    typedef unsigned short int WORD;
    typedef unsigned int DWORD;
    typedef unsigned long long int QWORD;
# 5 "include/user/stdio_h.h" 2

typedef char* va_list;
uint32_t printf(const char* str, ...);
uint32_t vsprintf(char* str, const char* format, va_list ap);
# 2 "user/stdio_c.c" 2
# 10 "user/stdio_c.c"
static void itoa(uint32_t value, char** buf_ptr_addr, uint8_t base) {
   uint32_t m = value % base;
   uint32_t i = value / base;
   if (i) {
      itoa(i, buf_ptr_addr, base);
   }
   if (m < 10) {
      *((*buf_ptr_addr)++) = m + '0';
   } else {
      *((*buf_ptr_addr)++) = m - 10 + 'A';
   }
}


uint32_t vsprintf(char* str, const char* format, va_list ap) {
   char* buf_ptr = str;
   const char* index_ptr = format;
   char index_char = *index_ptr;
   int32_t arg_int;
   while(index_char) {
      if (index_char != '%') {
  *(buf_ptr++) = index_char;
  index_char = *(++index_ptr);
  continue;
      }
      index_char = *(++index_ptr);
      switch(index_char) {
  case 'x':
     arg_int = *((int*)(ap += 4));
     itoa(arg_int, &buf_ptr, 16);
     index_char = *(++index_ptr);
     break;
      }
   }


   return 0;
}


uint32_t printf(const char* format, ...) {
   va_list args;
   args = (va_list)&format;
   char buf[512] = {0};
   vsprintf(buf, format, args);
   args = NULL;
   return 0;

}
